{"ast":null,"code":"var _jsxFileName = \"/Users/mmbower1/Documents/Freelance_Projects/my-own-ish/mikes-ecommerce/client/src/App.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'; // import PrivateRoute from './components/routing/PrivateRoute';\n\nimport setAuthToken from './utils/setAuthToken'; // actions\n\nimport { loadUser } from './actions/auth'; // redux\n\nimport store from './store';\nimport { Provider } from 'react-redux'; // containers\n\nimport Checkout from './containers/checkout/Checkout';\nimport Homepage from './containers/homepage/Homepage';\nimport ShopPage from './containers/shop/Shop';\nimport Auth from './containers/auth/Auth';\nimport './App.css'; // components\n\nimport Header from './components/header/Header';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nfunction App() {\n  // used in functional components, not class based components where componentDidMount() is used instead\n  // userSet data keeps reverting back to inital state, check if session token is in localstorage and exists, if not - send back to login. If yes - loadUser(), wait for it to finish to show UI.\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n  return /*#__PURE__*/React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/checkout\",\n    component: Checkout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Homepage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/shop\",\n    component: ShopPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/auth\",\n    component: Auth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mmbower1/Documents/Freelance_Projects/my-own-ish/mikes-ecommerce/client/src/App.js"],"names":["React","Fragment","useEffect","BrowserRouter","Router","Switch","Route","setAuthToken","loadUser","store","Provider","Checkout","Homepage","ShopPage","Auth","Header","localStorage","token","App","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD,C,CACA;;AACA,OAAOC,YAAP,MAAyB,sBAAzB,C,CACA;;AACA,SAASC,QAAT,QAAyB,gBAAzB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AAEA,IAAIC,YAAY,CAACC,KAAjB,EAAwB;AACtBV,EAAAA,YAAY,CAACS,YAAY,CAACC,KAAd,CAAZ;AACD;;AAED,SAASC,GAAT,GAAe;AACb;AACA;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAACU,QAAN,CAAeX,QAAQ,EAAvB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,WAAlB;AAA8B,IAAA,SAAS,EAAEE,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAmB,IAAA,SAAS,EAAEC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAmB,IAAA,SAAS,EAAEC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAFF,CADF,CADF,CADF;AAeD;;AAED,eAAeI,GAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n// import PrivateRoute from './components/routing/PrivateRoute';\nimport setAuthToken from './utils/setAuthToken';\n// actions\nimport { loadUser } from './actions/auth';\n// redux\nimport store from './store';\nimport { Provider } from 'react-redux';\n// containers\nimport Checkout from './containers/checkout/Checkout';\nimport Homepage from './containers/homepage/Homepage';\nimport ShopPage from './containers/shop/Shop';\nimport Auth from './containers/auth/Auth';\nimport './App.css';\n// components\nimport Header from './components/header/Header';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nfunction App() {\n  // used in functional components, not class based components where componentDidMount() is used instead\n  // userSet data keeps reverting back to inital state, check if session token is in localstorage and exists, if not - send back to login. If yes - loadUser(), wait for it to finish to show UI.\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, [])\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n        <Header />\n          <Switch>\n            <Route exact path='/checkout' component={Checkout} />\n            <Route exact path='/' component={Homepage} />\n            <Route path='/shop'component={ShopPage} />\n            <Route path='/auth'component={Auth} />\n          </Switch>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}