{"ast":null,"code":"import { ADD_ITEM, REMOVE_ITEM, REMOVE_ITEMS, TOGGLE_CART, TOGGLE_ERROR // UPDATE_ACCOUNT\n} from '../actions/types';\nimport { addItemToCart } from '../utils/addItemToCart';\nimport { removeItemFromCart } from '../utils/removeItemFromCart';\nconst initialState = {\n  // token: localStorage.getItem('token'),\n  // isAuthenticated: null,\n  // loading: true,\n  // user: null,\n  cartItems: [],\n  hidden: true\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case ADD_ITEM:\n      return { ...state,\n        // cartItems: [...state.cartItems, payload],\n        cartItems: addItemToCart(state.cartItems, payload) //updated way from line above\n\n      };\n\n    case REMOVE_ITEM:\n      return { ...state,\n        cartItems: removeItemFromCart(cartItems, payload)\n      };\n\n    case REMOVE_ITEMS:\n      return { ...state,\n        cartItems: state.cartItems.filter(cartItem => cartItem.id != payload.id)\n      };\n\n    case TOGGLE_CART:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/mmbower1/Documents/Freelance_Projects/my-own-ish/mikes-ecommerce/client/src/reducers/cart.js"],"names":["ADD_ITEM","REMOVE_ITEM","REMOVE_ITEMS","TOGGLE_CART","TOGGLE_ERROR","addItemToCart","removeItemFromCart","initialState","cartItems","hidden","state","action","type","payload","filter","cartItem","id"],"mappings":"AAAA,SACEA,QADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,YALF,CAME;AANF,OAOO,kBAPP;AASA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,kBAAT,QAAmC,6BAAnC;AAEA,MAAMC,YAAY,GAAG;AACnB;AACA;AACA;AACA;AACAC,EAAAA,SAAS,EAAE,EALQ;AAMnBC,EAAAA,MAAM,EAAE;AANW,CAArB;AASA,eAAe,UAASC,KAAK,GAAGH,YAAjB,EAA+BI,MAA/B,EAAuC;AACpD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAOC,IAAP;AACI,SAAKZ,QAAL;AACE,aAAO,EACL,GAAGU,KADE;AAEL;AACAF,QAAAA,SAAS,EAAEH,aAAa,CAACK,KAAK,CAACF,SAAP,EAAkBK,OAAlB,CAHnB,CAG+C;;AAH/C,OAAP;;AAKF,SAAKZ,WAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELF,QAAAA,SAAS,EAAEF,kBAAkB,CAACE,SAAD,EAAYK,OAAZ;AAFxB,OAAP;;AAIF,SAAKX,YAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBM,MAAhB,CAAuBC,QAAQ,IACxCA,QAAQ,CAACC,EAAT,IAAeH,OAAO,CAACG,EADd;AAFN,OAAP;;AAMF,SAAKb,WAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELD,QAAAA,MAAM,EAAE,CAACC,KAAK,CAACD;AAFV,OAAP;;AAIF;AACE,aAAOC,KAAP;AAzBN;AA2BD","sourcesContent":["import {\n  ADD_ITEM,\n  REMOVE_ITEM,\n  REMOVE_ITEMS,\n  TOGGLE_CART,\n  TOGGLE_ERROR\n  // UPDATE_ACCOUNT\n} from '../actions/types';\n\nimport { addItemToCart } from '../utils/addItemToCart';\nimport { removeItemFromCart } from '../utils/removeItemFromCart';\n\nconst initialState = {\n  // token: localStorage.getItem('token'),\n  // isAuthenticated: null,\n  // loading: true,\n  // user: null,\n  cartItems: [],\n  hidden: true\n}\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n  switch(type) {\n      case ADD_ITEM:\n        return {\n          ...state,\n          // cartItems: [...state.cartItems, payload],\n          cartItems: addItemToCart(state.cartItems, payload), //updated way from line above\n        }\n      case REMOVE_ITEM:\n        return {\n          ...state,\n          cartItems: removeItemFromCart(cartItems, payload)\n        }\n      case REMOVE_ITEMS:\n        return {\n          ...state,\n          cartItems: state.cartItems.filter(cartItem => \n            cartItem.id != payload.id\n          )\n        }\n      case TOGGLE_CART:\n        return {\n          ...state,\n          hidden: !state.hidden\n        }\n      default:\n        return state\n  }\n}"]},"metadata":{},"sourceType":"module"}